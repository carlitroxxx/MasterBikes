PREVIAMENTE
---------------------------------------------------------------------------------------------------
INSTALAR JAVA
JAVA 17: https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html
En cmd java -version  Deberia de entregar java version "17.x"
---------------------------------------------------------------------------------------------------
INSTALAR MAVEN LOCAL
Elegir versi칩n .zip (binaria)
https://maven.apache.org/download.cgi
Extrae el ZIP en: C:\Program Files\Apache\Maven      Crear carpetas de ser necesario
Configura variables de entorno:        Googleen si no saben
    MAVEN_HOME: C:\Program Files\Apache\Maven\apache-maven-x.x.x
    Agrega a Path: C:\Program Files\Apache\Maven\apache-maven-x.x.x\bin
Verifiquen en cmd: mvn -v
---------------------------------------------------------------------------------------------------
INSTALAR DOCKER
https://www.docker.com/products/docker-desktop/
Reiniciar PC
Verificar en cmd:     docker --version
---------------------------------------------------------------------------------------------------
1. Crear el springboot
#URL https://start.spring.io
-Maven
-3.5
-Group: com.masterbikes
-Artifact: MICROSERVICIO-service
#Dependencies:
-Spring Web
-Spring Data MongoDB
-Spring Boot DevTools
-Lombok
---------------------------------------------------------------------------------------------------
2. Crear archivos // usar de ejemplo Usuario
- Model
- Repository (interface)
- Controller
---------------------------------------------------------------------------------------------------
3. Crear Dockerfile (archivo sin extensi칩n)
- Contenido: (Se debe editar el nombre del microservicio)
FROM openjdk:17
WORKDIR /app
COPY target/usuarios-service-0.0.1-SNAPSHOT.jar app.jar
ENTRYPOINT ["java", "-jar", "app.jar"]
---------------------------------------------------------------------------------------------------
4. Crear docker-compose.yml (no es necesario, se crea en carpeta raiz)
services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  usuario-service:
    build: ./usuario-service
    ports:
      - "8081:8080"
    depends_on:
      - mongo
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/usuariosdb

volumes:
  mongo_data:
---------------------------------------------------------------------------------------------------
5. Compilar en powershell 

Desde usuario-service
mvn clean package -DskipTests
---------------------------------------------------------------------------------------------------
6. Levantar servicios desde MasterBikes
cd ..  # si est치s en usuario-service
docker-compose up --build
---------------------------------------------------------------------------------------------------
7. Postman 
GET http://localhost:8081/usuarios
POST http://localhost:8081/usuarios
{
  "nombre": "Pedro",
  "correo": "pedro@mail.com",
  "contrase침a": "123456"
}
---------------------------------------------------------------------------------------------------
Si quieren editar el model deben:
Detener los docker:
En consola:    docker-compose down
Editar modelo
Recompilar:    mvn clean package -DskipTests
Reconstruir docker:     docker-compose up --build
Probar nuevamente en Postman


